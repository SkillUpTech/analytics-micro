[hadoop]
python-executable={{ .Env.PIPELINE_VENV }}/bin/python2.7

[map-reduce]
engine = spark

[mapreduce]
engine = spark

[hdfs]
client = snakebite
namenode_host = namenode
namenode_port = 9000

[retcode]
# The following return codes are the recommended exit codes for Luigi.
# They are in increasing level of severity (for most applications).
already_running = 10
missing_data = 20
not_run = 25
task_failed = 30
scheduling_error = 35
unhandled_exception = 40

[hive]
release = apache
version = 2.1.1
command = beeline -u jdbc:hive2://hive-server:10000/default
database = default
warehouse_path = hdfs://namenode:9000/edx-analytics-pipeline/warehouse/

[database-export]
database = reports
credentials = /edx/etc/edx-analytics-pipeline/output.json

[database-import]
database = edxapp
credentials = /edx/etc/edx-analytics-pipeline/input.json
destination = hdfs://namenode:9000/edx-analytics-pipeline/warehouse/

[otto-database-import]
database = ecommerce
credentials = /edx/etc/edx-analytics-pipeline/input.json

[map-reduce]
engine = hadoop
marker = hdfs://namenode:9000/edx-analytics-pipeline/marker/

[event-logs]
pattern = [".*tracking.log-(?P<date>[0-9]+).*"]
expand_interval = 2 days
source = ["hdfs://namenode:9000/data/"]

[event-export]
output_root = hdfs://namenode:9000/edx-analytics-pipeline/event-export/output/
environment = simple
config = hdfs://namenode:9000/edx-analytics-pipeline/event_export/config.yaml
gpg_key_dir = hdfs://namenode:9000/edx-analytics-pipeline/event_export/gpg-keys/
gpg_master_key = master@key.org
required_path_text = FakeServerGroup

[event-export-course]
output_root = hdfs://namenode:9000/edx-analytics-pipeline/event-export-by-course/output/

[obfuscation]
output_root = hdfs://namenode:9000/edx-analytics-pipeline/obfuscation/output/
explicit_event_whitelist = explicit_events.tsv
xblock_obfuscation_config = xblock_obfuscation_config.yml

[id-codec]
seed_value = 42

[manifest]
threshold = 500
input_format = org.edx.hadoop.input.ManifestTextInputFormat
lib_jar = hdfs://namenode:9000/edx-analytics-pipeline/packages/edx-analytics-hadoop-util.jar
path = hdfs://namenode:9000/edx-analytics-pipeline/manifest/

[user-activity]
output_root = hdfs://namenode:9000/edx-analytics-pipeline/activity/

[enrollments]
interval_start = 2020-01-01

[financial-reports]
shoppingcart-partners = {"DEFAULT": "edx"}

[geolocation]
geolocation_data = hdfs://namenode:9000/edx-analytics-pipeline/geo.dat

[calendar]
interval = 2020-01-01-2023-01-01

[videos]
dropoff_threshold = 0.05
allow_empty_insert = true

[elasticsearch]
host = ["http://elasticsearch:9200/"]

[module-engagement]
allow_empty_insert = true
alias = roster
number_of_shards = 5

[ccx]
enabled = false

[run-vertica-sql-script]
schema = testing
read_timeout = 1

[problem-response]
report_fields = [
    "username",
    "problem_id",
    "answer_id",
    "location",
    "question",
    "score",
    "max_score",
    "correct",
    "answer",
    "total_attempts",
    "first_attempt_date",
    "last_attempt_date"]
report_output_root = /home/openedx/problem-response-reports/

[edx-rest-api]
client_id = {{ .Env.SOCIAL_AUTH_EDX_OIDC_KEY }}
client_secret = {{ .Env.SOCIAL_AUTH_EDX_OIDC_SECRET }}
auth_url = https://{{ .Env.LMS_BASE_URL }}/oauth2/access_token/

[course-list]
api_root_url = https://{{ .Env.LMS_BASE_URL }}/api/courses/v1/courses/

[course-blocks]
api_root_url = https://{{ .Env.LMS_BASE_URL }}/api/courses/v1/blocks/

[logger_root]
level=DEBUG

[logger_luigi_interface]
level=INFO
